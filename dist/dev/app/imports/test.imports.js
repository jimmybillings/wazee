"use strict";
var common_1 = require('@angular/common');
var testing_1 = require('@angular/http/testing');
var http_1 = require('@angular/http');
var core_1 = require('@angular/core');
var router_1 = require('@angular/router');
var forms_1 = require('@angular/forms');
var wazee_1 = require('./wazee');
var admin_service_1 = require('../+admin/services/admin.service');
var config_service_1 = require('../+admin/services/config.service');
var user_data_service_1 = require('../+user-management/services/user.data.service');
var wz_notification_service_1 = require('../shared/components/wz-notification/wz.notification.service');
var asset_data_service_1 = require('../+search/services/asset.data.service');
var wz_form_model_1 = require('../shared/components/wz-form/wz.form.model');
var MockRouter = (function () {
    function MockRouter() {
    }
    MockRouter.prototype.navigate = function (params) { return params; };
    return MockRouter;
}());
var MockActivatedRoute = (function () {
    function MockActivatedRoute() {
    }
    return MockActivatedRoute;
}());
var store_1 = require('@ngrx/store');
exports.Store = store_1.Store;
var Rx_1 = require('rxjs/Rx');
exports.Observable = Rx_1.Observable;
var core_2 = require('@angular/core');
exports.Injectable = core_2.Injectable;
var router_2 = require('@angular/router');
exports.ActivatedRoute = router_2.ActivatedRoute;
var testing_2 = require('@angular/http/testing');
exports.MockBackend = testing_2.MockBackend;
var current_user_model_1 = require('../shared/services/current-user.model');
exports.CurrentUser = current_user_model_1.CurrentUser;
var testing_3 = require('@angular/core/testing');
exports.inject = testing_3.inject;
exports.TestBed = testing_3.TestBed;
var http_2 = require('@angular/http');
exports.Response = http_2.Response;
exports.ResponseOptions = http_2.ResponseOptions;
exports.RequestMethod = http_2.RequestMethod;
exports.RequestOptions = http_2.RequestOptions;
exports.Headers = http_2.Headers;
var store_2 = require('@ngrx/store');
exports.beforeEachProvidersArray = [
    store_2.provideStore(wazee_1.WAZEE_STORES)
].concat(wazee_1.WAZEE_PROVIDERS, [
    wz_notification_service_1.WzNotificationService,
    config_service_1.ConfigService,
    admin_service_1.AdminService,
    user_data_service_1.User,
    core_1.Renderer,
    common_1.LocationStrategy,
    testing_1.MockBackend,
    http_1.BaseRequestOptions,
    router_1.RouterOutletMap,
    wz_form_model_1.FormModel,
    forms_1.FormBuilder,
    asset_data_service_1.AssetData,
    { provide: http_1.Http,
        useFactory: function (backend, defaultOptions) {
            return new http_1.Http(backend, defaultOptions);
        },
        deps: [testing_1.MockBackend, http_1.BaseRequestOptions]
    },
    { provide: router_1.Router, useClass: MockRouter },
    { provide: router_1.ActivatedRoute, useClass: MockActivatedRoute },
    core_1.ChangeDetectorRef
]);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9pbXBvcnRzL3Rlc3QuaW1wb3J0cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsdUJBQWlDLGlCQUFpQixDQUFDLENBQUE7QUFDbkQsd0JBQTRCLHVCQUF1QixDQUFDLENBQUE7QUFDcEQscUJBQTRELGVBQWUsQ0FBQyxDQUFBO0FBQzVFLHFCQUE0QyxlQUFlLENBQUMsQ0FBQTtBQUM1RCx1QkFBd0QsaUJBQWlCLENBQUMsQ0FBQTtBQUMxRSxzQkFBNEIsZ0JBQWdCLENBQUMsQ0FBQTtBQUk3QyxzQkFBOEMsU0FBUyxDQUFDLENBQUE7QUFHeEQsOEJBQTZCLGtDQUFrQyxDQUFDLENBQUE7QUFDaEUsK0JBQThCLG1DQUFtQyxDQUFDLENBQUE7QUFDbEUsa0NBQXFCLGdEQUFnRCxDQUFDLENBQUE7QUFDdEUsd0NBQXNDLDhEQUE4RCxDQUFDLENBQUE7QUFDckcsbUNBQTBCLHdDQUF3QyxDQUFDLENBQUE7QUFHbkUsOEJBQTBCLDRDQUE0QyxDQUFDLENBQUE7QUFHdkU7SUFBQTtJQUVBLENBQUM7SUFEQyw2QkFBUSxHQUFSLFVBQVMsTUFBVyxJQUFJLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0lBQzFDLGlCQUFDO0FBQUQsQ0FGQSxBQUVDLElBQUE7QUFDRDtJQUFBO0lBQTBCLENBQUM7SUFBRCx5QkFBQztBQUFELENBQTFCLEFBQTJCLElBQUE7QUFDM0Isc0JBQXNCLGFBQWEsQ0FBQztBQUEzQiw4QkFBMkI7QUFDcEMsbUJBQTJCLFNBQVMsQ0FBQztBQUE1QixxQ0FBNEI7QUFDckMscUJBQTJCLGVBQWUsQ0FBQztBQUFsQyx1Q0FBa0M7QUFDM0MsdUJBQStCLGlCQUFpQixDQUFDO0FBQXhDLGlEQUF3QztBQUNqRCx3QkFBNEIsdUJBQXVCLENBQUM7QUFBM0MsNENBQTJDO0FBQ3BELG1DQUE0Qix1Q0FBdUMsQ0FBQztBQUEzRCx1REFBMkQ7QUFDcEUsd0JBQWdDLHVCQUF1QixDQUFDO0FBQS9DLGtDQUFNO0FBQUUsb0NBQXVDO0FBRXhELHFCQUFrRixlQUFlLENBQUM7QUFBekYsbUNBQVE7QUFBRSxpREFBZTtBQUFFLDZDQUFhO0FBQUUsK0NBQWM7QUFBRSxpQ0FBK0I7QUFFbEcsc0JBQTZCLGFBQWEsQ0FBQyxDQUFBO0FBRzlCLGdDQUF3QixHQUFlO0lBQ2xELG9CQUFZLENBQUMsb0JBQVksQ0FBQztTQUN2Qix1QkFBZTtJQUNsQiwrQ0FBcUI7SUFDckIsOEJBQWE7SUFDYiw0QkFBWTtJQUNaLHdCQUFJO0lBQ0osZUFBUTtJQUNSLHlCQUFnQjtJQUNoQixxQkFBVztJQUNYLHlCQUFrQjtJQUNsQix3QkFBZTtJQUNmLHlCQUFTO0lBQ1QsbUJBQVc7SUFDWCw4QkFBUztJQUNULEVBQUMsT0FBTyxFQUFFLFdBQUk7UUFDWixVQUFVLEVBQUUsVUFBUyxPQUEwQixFQUFFLGNBQWtDO1lBQ2pGLE1BQU0sQ0FBQyxJQUFJLFdBQUksQ0FBQyxPQUFPLEVBQUUsY0FBYyxDQUFDLENBQUM7UUFDM0MsQ0FBQztRQUNELElBQUksRUFBRSxDQUFDLHFCQUFXLEVBQUUseUJBQWtCLENBQUM7S0FDeEM7SUFDRCxFQUFFLE9BQU8sRUFBRSxlQUFNLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRTtJQUN6QyxFQUFFLE9BQU8sRUFBRSx1QkFBYyxFQUFFLFFBQVEsRUFBRSxrQkFBa0IsRUFBRTtJQUN6RCx3QkFBaUI7RUFDbEIsQ0FBQyIsImZpbGUiOiJhcHAvaW1wb3J0cy90ZXN0LmltcG9ydHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBCT0lMRVIgUExBVEVcbmltcG9ydCB7IExvY2F0aW9uU3RyYXRlZ3kgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTW9ja0JhY2tlbmQgfSBmcm9tICdAYW5ndWxhci9odHRwL3Rlc3RpbmcnO1xuaW1wb3J0IHsgQmFzZVJlcXVlc3RPcHRpb25zLCBIdHRwLCBDb25uZWN0aW9uQmFja2VuZCB9IGZyb20gJ0Bhbmd1bGFyL2h0dHAnO1xuaW1wb3J0IHsgUmVuZGVyZXIsIENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBY3RpdmF0ZWRSb3V0ZSwgUm91dGVyLCBSb3V0ZXJPdXRsZXRNYXAgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgRm9ybUJ1aWxkZXIgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG4vLyBESVJFQ1RJVkVTXG5cbi8vIFNUT1JFUyAmIFBST1ZJREVSU1xuaW1wb3J0IHsgV0FaRUVfU1RPUkVTLCBXQVpFRV9QUk9WSURFUlMgfSBmcm9tICcuL3dhemVlJztcblxuLy8gU0VSVklDRVMgTk9UIElOIFdBWkVFX1BST1ZJREVSU1xuaW1wb3J0IHsgQWRtaW5TZXJ2aWNlIH0gZnJvbSAnLi4vK2FkbWluL3NlcnZpY2VzL2FkbWluLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ29uZmlnU2VydmljZSB9IGZyb20gJy4uLythZG1pbi9zZXJ2aWNlcy9jb25maWcuc2VydmljZSc7XG5pbXBvcnQgeyBVc2VyIH0gZnJvbSAnLi4vK3VzZXItbWFuYWdlbWVudC9zZXJ2aWNlcy91c2VyLmRhdGEuc2VydmljZSc7XG5pbXBvcnQgeyBXek5vdGlmaWNhdGlvblNlcnZpY2UgfSBmcm9tICcuLi9zaGFyZWQvY29tcG9uZW50cy93ei1ub3RpZmljYXRpb24vd3oubm90aWZpY2F0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgQXNzZXREYXRhIH0gZnJvbSAnLi4vK3NlYXJjaC9zZXJ2aWNlcy9hc3NldC5kYXRhLnNlcnZpY2UnO1xuXG4vLyBNT0RFTFNcbmltcG9ydCB7IEZvcm1Nb2RlbCB9IGZyb20gJy4uL3NoYXJlZC9jb21wb25lbnRzL3d6LWZvcm0vd3ouZm9ybS5tb2RlbCc7XG5cbi8vIEVYUE9SVFNcbmNsYXNzIE1vY2tSb3V0ZXIge1xuICBuYXZpZ2F0ZShwYXJhbXM6IGFueSkgeyByZXR1cm4gcGFyYW1zOyB9XG59XG5jbGFzcyBNb2NrQWN0aXZhdGVkUm91dGUge31cbmV4cG9ydCB7IFN0b3JlIH0gZnJvbSAnQG5ncngvc3RvcmUnO1xuZXhwb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMvUngnO1xuZXhwb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuZXhwb3J0IHsgQWN0aXZhdGVkUm91dGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuZXhwb3J0IHsgTW9ja0JhY2tlbmQgfSBmcm9tICdAYW5ndWxhci9odHRwL3Rlc3RpbmcnO1xuZXhwb3J0IHsgQ3VycmVudFVzZXIgfSBmcm9tICcuLi9zaGFyZWQvc2VydmljZXMvY3VycmVudC11c2VyLm1vZGVsJztcbmV4cG9ydCB7IGluamVjdCwgVGVzdEJlZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUvdGVzdGluZyc7XG5cbmV4cG9ydCB7IFJlc3BvbnNlLCBSZXNwb25zZU9wdGlvbnMsIFJlcXVlc3RNZXRob2QsIFJlcXVlc3RPcHRpb25zLCBIZWFkZXJzIH0gZnJvbSAnQGFuZ3VsYXIvaHR0cCc7XG5cbmltcG9ydCB7IHByb3ZpZGVTdG9yZSB9IGZyb20gJ0BuZ3J4L3N0b3JlJztcbi8vIGNvbnN0IHN0b3JlcyA9IHByb3ZpZGVTdG9yZShXQVpFRV9TVE9SRVMpO1xuXG5leHBvcnQgY29uc3QgYmVmb3JlRWFjaFByb3ZpZGVyc0FycmF5OiBBcnJheTxhbnk+ID0gW1xuICBwcm92aWRlU3RvcmUoV0FaRUVfU1RPUkVTKSxcbiAgLi4uV0FaRUVfUFJPVklERVJTLFxuICBXek5vdGlmaWNhdGlvblNlcnZpY2UsXG4gIENvbmZpZ1NlcnZpY2UsXG4gIEFkbWluU2VydmljZSxcbiAgVXNlcixcbiAgUmVuZGVyZXIsXG4gIExvY2F0aW9uU3RyYXRlZ3ksXG4gIE1vY2tCYWNrZW5kLFxuICBCYXNlUmVxdWVzdE9wdGlvbnMsXG4gIFJvdXRlck91dGxldE1hcCxcbiAgRm9ybU1vZGVsLFxuICBGb3JtQnVpbGRlcixcbiAgQXNzZXREYXRhLFxuICB7cHJvdmlkZTogSHR0cCxcbiAgICB1c2VGYWN0b3J5OiBmdW5jdGlvbihiYWNrZW5kOiBDb25uZWN0aW9uQmFja2VuZCwgZGVmYXVsdE9wdGlvbnM6IEJhc2VSZXF1ZXN0T3B0aW9ucykge1xuICAgICAgcmV0dXJuIG5ldyBIdHRwKGJhY2tlbmQsIGRlZmF1bHRPcHRpb25zKTtcbiAgICB9LFxuICAgIGRlcHM6IFtNb2NrQmFja2VuZCwgQmFzZVJlcXVlc3RPcHRpb25zXVxuICB9LFxuICB7IHByb3ZpZGU6IFJvdXRlciwgdXNlQ2xhc3M6IE1vY2tSb3V0ZXIgfSxcbiAgeyBwcm92aWRlOiBBY3RpdmF0ZWRSb3V0ZSwgdXNlQ2xhc3M6IE1vY2tBY3RpdmF0ZWRSb3V0ZSB9LFxuICBDaGFuZ2VEZXRlY3RvclJlZlxuXTtcbiJdfQ==
