/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './navbar.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from './navbar.component.css.shim.ngstyle';
import * as import9 from '../../../node_modules/@angular/router/src/directives/router_link.ngfactory';
import * as import10 from '../../../node_modules/@angular/router/src/directives/router_link_active.ngfactory';
import * as import11 from '@angular/core/src/linker/query_list';
import * as import12 from '@angular/router/src/router';
import * as import13 from '@angular/router/src/router_state';
import * as import14 from '@angular/common/src/location/location_strategy';
import * as import15 from '@angular/core/src/linker/element_ref';
import * as import16 from '@angular/router/src/directives/router_link';
import * as import17 from '@angular/router/src/directives/router_link_active';
export class Wrapper_NavbarComponent {
  /*private*/ _eventHandler:Function;
  context:import0.NavbarComponent;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import0.NavbarComponent();
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_NavbarComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_NavbarComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.NavbarComponent>;
  _NavbarComponent_0_3:Wrapper_NavbarComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_NavbarComponent_Host0,renderType_NavbarComponent_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'sd-navbar',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_NavbarComponent0(this.viewUtils,this,0,this._el_0);
    this._NavbarComponent_0_3 = new Wrapper_NavbarComponent();
    this.compView_0.create(this._NavbarComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._NavbarComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.NavbarComponent) && (0 === requestNodeIndex))) { return this._NavbarComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._NavbarComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const NavbarComponentNgFactory:import7.ComponentFactory<import0.NavbarComponent> = new import7.ComponentFactory<import0.NavbarComponent>('sd-navbar',View_NavbarComponent_Host0,import0.NavbarComponent);
const styles_NavbarComponent:any[] = [import8.styles];
var renderType_NavbarComponent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.Emulated,styles_NavbarComponent,{});
export class View_NavbarComponent0 extends import1.AppView<import0.NavbarComponent> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _RouterLinkWithHref_2_3:import9.Wrapper_RouterLinkWithHref;
  _RouterLinkActive_2_4:import10.Wrapper_RouterLinkActive;
  _query_RouterLink_2_0:import11.QueryList<any>;
  _query_RouterLinkWithHref_2_1:import11.QueryList<any>;
  _text_3:any;
  _text_4:any;
  _el_5:any;
  _RouterLinkWithHref_5_3:import9.Wrapper_RouterLinkWithHref;
  _RouterLinkActive_5_4:import10.Wrapper_RouterLinkActive;
  _query_RouterLink_5_0:import11.QueryList<any>;
  _query_RouterLinkWithHref_5_1:import11.QueryList<any>;
  _text_6:any;
  _text_7:any;
  _text_8:any;
  _arr_17:any;
  _map_18:any;
  _arr_19:any;
  _arr_20:any;
  _map_21:any;
  _arr_22:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_NavbarComponent0,renderType_NavbarComponent,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
    this._arr_17 = import3.pureProxy1((p0:any):any[] => {
      return [p0];
    });
    this._map_18 = import3.pureProxy1((p0:any):{[key: string]:any} => {
      return {exact: p0};
    });
    this._arr_19 = import3.pureProxy1((p0:any):any[] => {
      return [p0];
    });
    this._arr_20 = import3.pureProxy1((p0:any):any[] => {
      return [p0];
    });
    this._map_21 = import3.pureProxy1((p0:any):{[key: string]:any} => {
      return {exact: p0};
    });
    this._arr_22 = import3.pureProxy1((p0:any):any[] => {
      return [p0];
    });
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'nav',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'a',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._RouterLinkWithHref_2_3 = new import9.Wrapper_RouterLinkWithHref(this.parentView.injectorGet(import12.Router,this.parentIndex),this.parentView.injectorGet(import13.ActivatedRoute,this.parentIndex),this.parentView.injectorGet(import14.LocationStrategy,this.parentIndex));
    this._RouterLinkActive_2_4 = new import10.Wrapper_RouterLinkActive(this.parentView.injectorGet(import12.Router,this.parentIndex),new import15.ElementRef(this._el_2),this.renderer);
    this._query_RouterLink_2_0 = new import11.QueryList<any>();
    this._query_RouterLinkWithHref_2_1 = new import11.QueryList<any>();
    this._text_3 = this.renderer.createText(this._el_2,'HOME',(null as any));
    this._text_4 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,this._el_0,'a',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._RouterLinkWithHref_5_3 = new import9.Wrapper_RouterLinkWithHref(this.parentView.injectorGet(import12.Router,this.parentIndex),this.parentView.injectorGet(import13.ActivatedRoute,this.parentIndex),this.parentView.injectorGet(import14.LocationStrategy,this.parentIndex));
    this._RouterLinkActive_5_4 = new import10.Wrapper_RouterLinkActive(this.parentView.injectorGet(import12.Router,this.parentIndex),new import15.ElementRef(this._el_5),this.renderer);
    this._query_RouterLink_5_0 = new import11.QueryList<any>();
    this._query_RouterLinkWithHref_5_1 = new import11.QueryList<any>();
    this._text_6 = this.renderer.createText(this._el_5,'ABOUT',(null as any));
    this._text_7 = this.renderer.createText(this._el_0,'\n',(null as any));
    this._text_8 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_2));
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_5,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_5));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._text_7,
      this._text_8
    ]
    ),[
      disposable_0,
      disposable_1
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import16.RouterLinkWithHref) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._RouterLinkWithHref_2_3.context; }
    if (((token === import17.RouterLinkActive) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._RouterLinkActive_2_4.context; }
    if (((token === import16.RouterLinkWithHref) && ((5 <= requestNodeIndex) && (requestNodeIndex <= 6)))) { return this._RouterLinkWithHref_5_3.context; }
    if (((token === import17.RouterLinkActive) && ((5 <= requestNodeIndex) && (requestNodeIndex <= 6)))) { return this._RouterLinkActive_5_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = this._arr_17('/');
    this._RouterLinkWithHref_2_3.check_routerLink(currVal_2_0_0,throwOnChange,false);
    this._RouterLinkWithHref_2_3.ngDoCheck(this,this._el_2,throwOnChange);
    const currVal_2_1_0:any = this._map_18(true);
    this._RouterLinkActive_2_4.check_routerLinkActiveOptions(currVal_2_1_0,throwOnChange,false);
    const currVal_2_1_1:any = this._arr_19('router-link-active');
    this._RouterLinkActive_2_4.check_routerLinkActive(currVal_2_1_1,throwOnChange,false);
    this._RouterLinkActive_2_4.ngDoCheck(this,this._el_2,throwOnChange);
    const currVal_5_0_0:any = this._arr_20('/about');
    this._RouterLinkWithHref_5_3.check_routerLink(currVal_5_0_0,throwOnChange,false);
    this._RouterLinkWithHref_5_3.ngDoCheck(this,this._el_5,throwOnChange);
    const currVal_5_1_0:any = this._map_21(true);
    this._RouterLinkActive_5_4.check_routerLinkActiveOptions(currVal_5_1_0,throwOnChange,false);
    const currVal_5_1_1:any = this._arr_22('router-link-active');
    this._RouterLinkActive_5_4.check_routerLinkActive(currVal_5_1_1,throwOnChange,false);
    this._RouterLinkActive_5_4.ngDoCheck(this,this._el_5,throwOnChange);
    if (!throwOnChange) {
      if (this._query_RouterLink_2_0.dirty) {
        this._query_RouterLink_2_0.reset(([] as any[]));
        this._RouterLinkActive_2_4.context.links = this._query_RouterLink_2_0;
        this._query_RouterLink_2_0.notifyOnChanges();
      }
      if (this._query_RouterLinkWithHref_2_1.dirty) {
        this._query_RouterLinkWithHref_2_1.reset([this._RouterLinkWithHref_2_3.context]);
        this._RouterLinkActive_2_4.context.linksWithHrefs = this._query_RouterLinkWithHref_2_1;
        this._query_RouterLinkWithHref_2_1.notifyOnChanges();
      }
      if (this._query_RouterLink_5_0.dirty) {
        this._query_RouterLink_5_0.reset(([] as any[]));
        this._RouterLinkActive_5_4.context.links = this._query_RouterLink_5_0;
        this._query_RouterLink_5_0.notifyOnChanges();
      }
      if (this._query_RouterLinkWithHref_5_1.dirty) {
        this._query_RouterLinkWithHref_5_1.reset([this._RouterLinkWithHref_5_3.context]);
        this._RouterLinkActive_5_4.context.linksWithHrefs = this._query_RouterLinkWithHref_5_1;
        this._query_RouterLinkWithHref_5_1.notifyOnChanges();
      }
      if ((this.numberOfChecks === 0)) { this._RouterLinkActive_2_4.context.ngAfterContentInit(); }
      if ((this.numberOfChecks === 0)) { this._RouterLinkActive_5_4.context.ngAfterContentInit(); }
    }
    this._RouterLinkWithHref_2_3.checkHost(this,this,this._el_2,throwOnChange);
    this._RouterLinkWithHref_5_3.checkHost(this,this,this._el_5,throwOnChange);
  }
  destroyInternal():void {
    this._RouterLinkWithHref_2_3.ngOnDestroy();
    this._RouterLinkActive_2_4.ngOnDestroy();
    this._RouterLinkWithHref_5_3.ngOnDestroy();
    this._RouterLinkActive_5_4.ngOnDestroy();
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._RouterLinkWithHref_2_3.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_5(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._RouterLinkWithHref_5_3.handleEvent(eventName,$event) && result);
    return result;
  }
}